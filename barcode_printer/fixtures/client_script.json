[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Barcode Preview",
  "enabled": 1,
  "modified": "2025-09-08 16:34:08.536809",
  "module": null,
  "name": "print+generate",
  "script": "frappe.ui.form.on(\"Barcode Preview\", {\n    refresh: function(frm) {\n        // Render preview if barcode exists\n        if (frm.doc.custom_barcode_number) {\n            render_barcode(frm, frm.doc.custom_barcode_number);\n            add_print_button(frm);\n        } else {\n            clear_barcode_preview(frm);\n        }\n    },\n\n    before_save: function(frm) {\n        // Auto-generate barcode before save\n        if (!frm.doc.custom_barcode_number && frm.doc.item_name && frm.doc.price) {\n            let base = Math.floor(Math.random() * 1000000000000)\n                .toString()\n                .padStart(12, \"0\");\n            let barcode = base + calculate_ean13_checksum(base);\n            frm.set_value(\"custom_barcode_number\", barcode);\n        }\n    },\n\n    after_save: function(frm) {\n        if (frm.doc.custom_barcode_number) {\n            render_barcode(frm, frm.doc.custom_barcode_number);\n            add_print_button(frm);\n        }\n    }\n});\n\n// ------------------ Render Preview ------------------\nfunction render_barcode(frm, barcode) {\n    let html = `\n        <div id=\"barcode_clickable\" style=\"text-align:center; padding:5px; cursor:pointer;\">\n            <div style=\"margin-top:4px; font-size:16px; font-weight:bold;\">\n                ${frm.doc.item_name || \"\"}\n            </div>\n            <svg id=\"barcode_svg\"></svg>\n            <div style=\"font-size:16px; font-weight:bold; margin-top:4px;\">\n                ${barcode}\n            </div>\n            <div style=\"margin-top:4px; font-size:18px; font-weight:bold;\">\n                BDT. ${parseFloat(frm.doc.price || 0).toFixed(2)}\n            </div>\n            <div style=\"font-size:12px; color:grey; margin-top:4px;\">\n                Click to Print\n            </div>\n        </div>\n    `;\n\n    frm.set_df_property(\"custom_barcode_preview\", \"options\", html);\n    frm.refresh_field(\"custom_barcode_preview\");\n\n    setTimeout(() => {\n        if (typeof JsBarcode !== \"undefined\") {\n            JsBarcode(\"#barcode_svg\", barcode, {\n                format: \"ean13\",\n                displayValue: false,\n                lineColor: \"#000\",\n                width: 2,\n                height: 50,\n                margin: 0\n            });\n        }\n\n        // Add click listener for printing\n        const clickable = document.getElementById(\"barcode_clickable\");\n        if (clickable) {\n            clickable.onclick = () => {\n                let copies = parseInt(prompt(\"How many copies do you want to print?\", \"1\"));\n                if (!isNaN(copies) && copies > 0) {\n                    print_to_zebra(frm, copies);\n                } else {\n                    frappe.msgprint(\"⚠️ Invalid number of copies.\");\n                }\n            };\n        }\n    }, 300);\n}\n\nfunction clear_barcode_preview(frm) {\n    frm.set_df_property(\n        \"custom_barcode_preview\",\n        \"options\",\n        \"<div style='text-align:center; color:grey;'>No Barcode Generated</div>\"\n    );\n    frm.refresh_field(\"custom_barcode_preview\");\n}\n\nfunction add_print_button(frm) {\n    frm.add_custom_button(\"Print ZPL (Zebra)\", function() {\n        let copies = parseInt(prompt(\"How many copies do you want to print?\", \"1\"));\n        if (!isNaN(copies) && copies > 0) {\n            print_to_zebra(frm, copies);\n        } else {\n            frappe.msgprint(\"⚠️ Invalid number of copies.\");\n        }\n    });\n}\n\n// ------------------ ZPL Printing ------------------\nfunction print_to_zebra(frm, copies = 1) {\n    if (!frm.doc.custom_barcode_number) {\n        frappe.msgprint(\"⚠️ Please save to generate a barcode first.\");\n        return;\n    }\n\n    frappe.ui.form.qz_connect()\n        .then(() => qz.printers.find(\"Zebra_Technologies_ZTC_ZD230-203dpi_ZPL\"))\n        .then(printer => {\n            if (!printer) throw new Error(\"Zebra printer not found!\");\n\n            let itemName = frm.doc.item_name || \"Unknown\";\n            let price = parseFloat(frm.doc.price || 0).toFixed(2);\n            let barcode = frm.doc.custom_barcode_number;\n\n            let zpl = `\n^XA\n^CI28\n^PW320\n^LL200\n^LH0,20\n^SD15\n\n^FO120,40^A0N,18,20^FD${itemName}^FS\n^FO90,70^BY2,3,50^BEN,50,Y,N^FD${barcode}^FS\n^FO90,150^A0N,25,32^FDBDT. ${price}^FS\n\n^XZ\n`;\n\n            let config = qz.configs.create(printer, {\n                forceRaw: true,\n                density: 203,\n                size: { width: 3, height: 2, units: \"in\" },\n                margins: 0\n            });\n\n            // Repeat ZPL based on copies\n            let data = [];\n            for (let i = 0; i < copies; i++) {\n                data.push({ type: \"raw\", format: \"command\", flavor: \"plain\", data: zpl });\n            }\n\n            return qz.print(config, data);\n        })\n        .then(() => frappe.show_alert({ message: `✅ ${copies} label(s) sent to Zebra!`, indicator: \"green\" }))\n        .catch(err => frappe.msgprint(\"QZ Print Error: \" + err));\n}\n\n// ------------------ EAN-13 checksum ------------------\nfunction calculate_ean13_checksum(number) {\n    let sum = 0;\n    for (let i = 0; i < number.length; i++) {\n        let n = parseInt(number[i]);\n        if (i % 2 === 0) sum += n;\n        else sum += n * 3;\n    }\n    return (10 - (sum % 10)) % 10;\n}\n",
  "view": "Form"
 }
]